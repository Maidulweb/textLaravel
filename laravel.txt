Authentication ( auth )
composer require laravel/ui --dev
php artisan ui vue --auth
composer dump-autoload
npm run dev

 
 #### First way ####
 
 ### For validation:
 
    ## 1. 
    
       $validator = Validator::make($request->all(), [
            'email' => 'required|email|unique:users,email'
        ]);

        if ($validator->fails()) {
            return redirect()->back()->withErrors($validator)->withInput();
        }
        
    ## 2. 
    
        try {
            $this->validate($request, [
             'product_id' => 'required|numeric'
            ]);

        } catch(ValidationException $e)
        {
            return redirect()->back();
        }
        
        
    #### Data Insert ####
    
     ## 1.
          try{
            User::create([
                'email' => strtolower($request->input('email')) ,
                'password' => bcrypt($request->input('password')),
                'email_verification_token' => uniqid(time().$request->input('email'), true).Str::random(4)
            ]);
            
            }catch(\Exception $e)
            {
                 session()->flash('message', $e->getMessage());
                 session()->flash('type', 'danger');

                 return redirect()->back();
            }
            
            
            
        ## Second way:
        
        
             public function functionname(Request $request){

                 $request->validate([
                    'name' => 'required|regex:/^[a-z A-Z]+$/u|max:255|min:3',
               ]);


                   $newvariable = new Modelname;
                   $newvariable ->name = $request->name ;
                   $newvariable ->save();
                   return redirect()->route('mi7')->with('status', 'Application submitted successfully!');
               }
               
               
       #### Get Product ####
       
      
       Product::where('slug', $slug)->where('active', 1)->first();
       Product::select(['id', 'title', 'slug', 'image', 'price', 'sale_price'])->where('active', 1)->paginate(6);
       
       $products = Product::orderBy('id', 'desc')->get();
       return view('pages.products.index')->with('products', $products);
       
       
       #### Get Product by input ####
       
       Product::findOrFail($request->input('product_id'));
       
       
       #### Image upload ####
       
       if($request->hasFile('product_image')){
          $image = $request->file('product_image');
          $img = time(). '.' . $image->getClientOriginalExtension();
          $location = public_path('images/products/'.$img);
          Image::make($image)->save($location);

          $feature_image = new FeatureImage;
          $feature_image->product_id = $product->id;
          $feature_image->image = $img;
          $feature_image->save();
          
          
          
       
       #### Errors Message ####
       
        @if ($errors->any())
                 <div class="alert alert-danger">
                 <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                    <ul>
                        @foreach ($errors->all() as $error)
                            <li>{{ $error }}</li>
                        @endforeach
                   </ul>
               </div>
        @endif
        
        @if(session()->has('message'))
               <div class="alert alert-{{session('type')}}">
                    {{session('message')}}
               </div>
         @endif
         
         @auth()
               <ul class="auth-ul">
                     <li>
                        <a href="{{route('llcprofile')}}">Profile</a>
                     </li>
                     <li>
                       <form action="{{route('llclogout')}}" method="post">
                       @csrf
                         <button type="submit">Logout</button>
                       </form>
                     </li>
                </ul>
          @endauth

          @guest()
                <a href="{{route('llclogin')}}">Login</a> <a href="{{route('llcregister')}}">Register</a>
          @endguest


      Problem foreign key:

      unsignedInteger - Not working

      unsignedBigInteger - Working
