Authentication ( auth )
composer require laravel/ui --dev
php artisan ui vue --auth
composer dump-autoload
npm run dev

 
 #### First way ####
 
 ### For validation:
 
    ## 1. 
    
       $validator = Validator::make($request->all(), [
            'name' => 'required',
            'email' => 'required|email|unique:users,email',
            'phone_number' => 'required|min:11|max:13|unique:users,phone_number',
            'password' => 'required|min:6',
        ]);

        if ($validator->fails()) {
            return redirect()->back()->withErrors($validator)->withInput();
        }
        
    ## 2. 
    
        try {
            $this->validate($request, [
             'product_id' => 'required|numeric'
            ]);

        } catch(ValidationException $e)
        {
            return redirect()->back();
        }
        
        
    #### Data Insert ####
    
     ## 1.
          try{
            User::create([
                'name' => $request->input('name'),
                'email' => strtolower($request->input('email')) ,
                'phone_number' => $request->input('phone_number'),
                'password' => bcrypt($request->input('password')),
                'email_verification_token' => uniqid(time().$request->input('email'), true).Str::random(4)
            ]);
            
            }catch(\Exception $e)
            {
                 session()->flash('message', $e->getMessage());
                 session()->flash('type', 'danger');

                 return redirect()->back();
            }
            
            
            
        ## Second way:
        
        
             public function functionname(Request $request){

                 $request->validate([
                    'name' => 'required|regex:/^[a-z A-Z]+$/u|max:255|min:3',
                    'email' => 'required',
                    'phone_number' => 'required|numeric',
                    'university' => 'required|regex:/^[a-z A-Z]+$/u',
                    'ielts' => 'nullable',
               ]);


                   $newvariable = new Modelname;
                   $newvariable ->name = $request->name ;
                   $newvariable ->save();
                   return redirect()->route('mi7')->with('status', 'Application submitted successfully!');
               }
       
       #### Errors Message ####
       
        @if ($errors->any())
                 <div class="alert alert-danger">
                    <ul>
                        @foreach ($errors->all() as $error)
                            <li>{{ $error }}</li>
                        @endforeach
                   </ul>
               </div>
        @endif
        
        @if(session()->has('message'))
               <div class="alert alert-{{session('type')}}">
                    {{session('message')}}
               </div>
         @endif
         
         @auth()
               <ul class="auth-ul">
                     <li>
                        <a href="{{route('llcprofile')}}">Profile</a>
                     </li>
                     <li>
                       <form action="{{route('llclogout')}}" method="post">
                       @csrf
                         <button type="submit">Logout</button>
                       </form>
                     </li>
                </ul>
          @endauth

          @guest()
                <a href="{{route('llclogin')}}">Login</a> <a href="{{route('llcregister')}}">Register</a>
          @endguest
